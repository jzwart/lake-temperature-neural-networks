target_default: 1_format

packages:
  - zeallot
  - readr
  - yaml
  - googledrive

sources:
  - lib/src/psprintf.R
  - 1_format/src/format_tasks.R
  - 1_format/src/calculate_priority_lakes.R

targets:
  1_format:
    depends:
      - 1_format/log/1_format_tasks.ind

  # read and subset the NN settings
  settings:
    command: yaml.load_file('lib/cfg/settings.yml')
  combine_cfg:
    command: settings[I(c('min_obs_per_depth', 'min_obs_per_date'))]
  format_cfg:
    command: settings[I(c('structure'))]
  split_scale_cfg:
    command: settings[I(c('dev_frac', 'test_frac'))]

  # get temperature observations from pipeline #1
  temp_data_location:
    command: as_id(I('1NKxgtnR8GZLAQ1IhFk-C-rYQmtTN7lPq'))

  in/all_temp_data.feather:
    command: drive_download(file = temp_data_location, path = target_name)

  priority_lakes_by_choice:
    command: get_site_ids(file = 'lib/crosswalks/pipeline_3_lakes.csv')

  priority_lakes_by_data:
    command: calc_priority_lakes(temp_dat = 'in/all_temp_data.feather', n_min = 2000, n_years = 30, years_with_7months = 10, years_with_10days = 20, n_days = 1000)

  priority_lakes:
    command: combine_priorities(priority_lakes_by_choice, priority_lakes_by_data)

  site_ids:
    command: get_site_ids(file = 'lib/crosswalks/pipeline_3_lakes.csv')

  format_data_task_plan:
    command: create_format_task_plan(site_ids, ind_dir = I("1_format"))

  1_format_tasks.yml:
    command: create_format_task_makefile(task_plan = format_data_task_plan, makefile = target_name, ind_complete=TRUE)

  1_format/log/1_format_tasks.ind:
    command: loop_tasks(task_plan = format_data_task_plan, task_makefile = '1_format_tasks.yml', num_tries=1)
