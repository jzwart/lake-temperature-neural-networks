target_default: 2_model

packages:
  - dplyr
  - tidyr
  - keras

sources:
  - 2_model/src/models.R
  - 2_model/src/evaluate.R

targets:
  2_model:
    depends:
      - split_scaled_nn
      - split_scaled_snn
      - split_scaled_rnn
      - split_scaled_rsnn
      - model_01
      - model_01_eval
      - model_02
      - model_02_eval
      - model_03
      - model_03_eval

  lake_name:
    command: c(I('Mille Lacs'))

  formatted_nn:
    command: format_nn_data(combined, structure=I('NN'))
  split_scaled_nn:
    command: split_scale_nn_data(formatted_nn)

  formatted_snn:
    command: format_nn_data(combined, structure=I('SNN'))
  split_scaled_snn:
    command: split_scale_nn_data(formatted_snn)

  formatted_rnn:
    command: format_nn_data(combined, structure=I('RNN'))
  split_scaled_rnn:
    command: split_scale_nn_data(formatted_rnn)

  formatted_rsnn:
    command: format_nn_data(combined, structure=I('RSNN'))
  split_scaled_rsnn:
    command: split_scale_nn_data(formatted_rsnn)

  model_01:
    command: run_model_01(split_scaled_nn)
  model_01_eval:
    command: evaluate_model(model_01, split_scaled_nn, rmd_file="2_model/src/assessment.Rmd", lake_name = lake_name)

  model_02:
    command: run_model_02(split_scaled_nn)
  model_02_eval:
    command: evaluate_model(model_02, split_scaled_nn, rmd_file="2_model/src/assessment.Rmd", lake_name = lake_name)

  model_03:
    command: run_model_03(split_scaled_nn)
  model_03_eval:
    command: evaluate_model(model_03, split_scaled_nn, rmd_file="2_model/src/assessment.Rmd", lake_name = lake_name)
